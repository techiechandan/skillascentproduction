{"version":3,"file":"static/js/443.e32627b1.chunk.js","mappings":"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","sources":["Components/admin/Sidebar.jsx","Pages/admin/Users.jsx"],"sourcesContent":["import { React,useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport Button from 'react-bootstrap/esm/Button'\r\n// incons\r\nimport { FaWindows, FaUserFriends, FaClipboardList, FaWhmcs, FaEllo,FaAlignJustify } from 'react-icons/fa'\r\n\r\n\r\n\r\nconst Sidebar = ({ openState,setOpenState }) => {\r\n\r\n  const menuList = [\r\n    {\r\n      logo: <FaWindows />,\r\n      name: \"Dashboard\",\r\n      path:\"/admin/dashboard\"\r\n    },\r\n    {\r\n      logo: <FaUserFriends />,\r\n      name: \"Users\",\r\n      path:\"/admin/users\"\r\n    },\r\n    {\r\n      logo: <FaClipboardList />,\r\n      name: \"Course List\",\r\n      path:\"/admin/course-list\"\r\n    },\r\n    {\r\n      logo: <FaWhmcs />,\r\n      name: \"Site\",\r\n      path:\"/admin/site-settings\"\r\n    },\r\n    {\r\n      logo: <FaWhmcs />,\r\n      name:\"Query\",\r\n      path:\"/admin/queries\"\r\n    }\r\n  ]\r\n\r\n  const [CurrentWidth,setCurrentWidth] = useState(window.innerWidth);\r\n  const resizeHandler = ()=>{\r\n    setCurrentWidth(window.innerWidth);\r\n  }\r\n  window.addEventListener('resize',resizeHandler);\r\n\r\n\r\n  return (\r\n    <div className={CurrentWidth < 768?\"vh-100 bg-light ps-3 position-fixed start-0 bg-light\":\"vh-100 ps-3 bg-light sticky-top\"} style={openState ? {width:'400px',zIndex:\"100000\"}  : CurrentWidth < 768 ?{ marginLeft: '-70px',transition: \"0.3s\" }:{width:\"90px\",transition: \"0.3s\"}}>\r\n      <div className=\"ps-3 pt-2 mb-0 wrap-element d-flex align-items-center \">\r\n        <span className=\"fs-3 mb-1 text-primary me-2\"><FaEllo /></span>\r\n        <span className=\"fs-3 fw-bold text-primary me-auto\" style={openState ? { display: 'block' } : { display: 'none' }}>Skill Ascent</span>\r\n        {openState&& CurrentWidth < 768 &&\r\n          <Button className=\"p-2 pt-0 me-2 fs-4 bg-transparent text-danger border-0 \" onClick={()=>{setOpenState(!openState)}}>\r\n            <FaAlignJustify />\r\n        </Button>\r\n        }\r\n      </div>\r\n      {/* <hr className=\"m-0 mt-2 p-0 wrap-element\"></hr> */}\r\n\r\n      <ul className=\"p-0\" >\r\n        {\r\n          menuList.map((item, index) =>\r\n          (\r\n            <li key={index} className=\" py-1 my-2 wrap-element\" >\r\n              <Link to={item.path}  className=\"d-flex align-items-center ps-3 text-dark wrap-element\">\r\n                <span className=\"fs-4 me-2 pb-1\">{item.logo}</span>\r\n                <span className=\"fs-5\" style={openState ? { display: 'block'} : { display: 'none',transition: \"0.3s\" }}>{item.name}</span>\r\n              </Link>\r\n            </li>\r\n          )\r\n          )\r\n        }\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Sidebar","import { React, useState, useEffect } from 'react'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Table from 'react-bootstrap/Table';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Spinner from 'react-bootstrap/Spinner';\r\nimport Select from 'react-select'\r\nimport axios from 'axios'\r\nimport { State, City } from 'country-state-city'\r\nimport BaseUrl from '../../helper/urlHelper'\r\n\r\n// icons\r\nimport { FaAlignJustify } from 'react-icons/fa'\r\n// components\r\nimport Sidebar from '../../Components/admin/Sidebar'\r\n\r\n\r\n\r\nconst Users = () => {\r\n  const [users, setUsers] = useState([]);\r\n  const [modalStatus, setModalStatus] = useState(false);\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n  // getting users list from db\r\n  const getUsers = async () => {\r\n    try {\r\n      const response = await axios.get(`${BaseUrl}/admin/users/api`);\r\n      setUsers([...response.data.usersList]);\r\n      setIsLoaded(true);\r\n    } catch (error) {\r\n      setIsLoaded(true);\r\n    }\r\n  }\r\n\r\n  // updating user's details\r\n  const [StateList, setStateList] = useState([]);\r\n  const [CityList, setCityList] = useState([]);\r\n\r\n  // Course List\r\n  const options = [\r\n    { value: \"BCA\", label: \"BCA\" },\r\n    { value: \"BBA\", label: \"BBA\" },\r\n    { value: \"BJMC\", label: \"BJMC\" },\r\n    { value: \"B.COM\", label: \"B.COM\" },\r\n    { value: \"B.TECH\", label: \"B.TECH\" },\r\n  ]\r\n  // State List \r\n  const stateOptions = StateList.map((item) => {\r\n    return { value: item.name, label: item.name }\r\n  });\r\n\r\n  // User Roles List\r\n  const RolesList = [\r\n    { value: \"user\", label: \"user\" },\r\n    { value: \"admin\", label: \"admin\" },\r\n    { value: \"super_admin\", label: \"super_admin\" }\r\n  ]\r\n\r\n\r\n  const getEdituser = (index) => {\r\n    // Populating cities list\r\n    const isoCode = StateList.find(item => item.name === users[index].state).isoCode;\r\n    setCityList(City.getCitiesOfState(\"IN\", isoCode).map((item) => {\r\n      return { value: item.name, label: item.name }\r\n    }));\r\n\r\n    setId(users[index]._id);\r\n    setName(users[index].name);\r\n    setEmail(users[index].email);\r\n    setCourse(users[index].course);\r\n    setState(users[index].state);\r\n    setCity(users[index].city);\r\n    setRoles([users[index].roles[0],users[index].roles[1],users[index].roles[2]]);\r\n  }\r\n\r\n  const [id,setId] = useState(\"\")\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [course, setCourse] = useState(\"\");\r\n  const [state, setState] = useState(\"\");\r\n  const [city, setCity] = useState(\"\");\r\n  const [roles, setRoles] = useState([]);\r\n\r\n  // updating uer's details\r\n  const updateHandler = async() => {\r\n    try {\r\n      const response = await axios.post(`${BaseUrl}/admin/update/users/deatils/api`,{id,name,email,course,state,city,roles});\r\n      if(response.status === 200){\r\n        alert(response.data.message);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      alert(error.response.data.message);\r\n    }\r\n  }\r\n\r\n  // deleting user's\r\n  const deleteUser = async(userId)=>{\r\n    try{\r\n      const response = await axios.delete(`${BaseUrl}/admin/user/delete/${userId}/api`);\r\n      if(response.status === 200){\r\n        alert(response.data.message);\r\n      }\r\n    }catch(error){\r\n      alert(error.response.data.message);\r\n    }\r\n  }\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    setStateList(State.getStatesOfCountry(\"IN\"));\r\n    getUsers();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n\r\n  const [openState, setOpenState] = useState(true);\r\n\r\n  return (\r\n    <div className=\"d-flex p-0\">\r\n      <Sidebar openState={openState} setOpenState={setOpenState} />\r\n      <div className=\"container-fluid vh-100 m-0 px-0 \" style={{ backgroundColor: '#ececec',width:\"100%\" }}>\r\n        <div className=\"container-fluid d-flex py-2 align-items-center sticky-top bg-light\">\r\n          <Button className=\"p-2 pt-0 me-2 fs-4 bg-transparent text-danger border-0 \" onClick={() => { setOpenState(!openState) }}>\r\n            <FaAlignJustify />\r\n          </Button>\r\n          <h5>Users</h5>\r\n        </div>\r\n        <div className=\" p-4 pt-2 my-3\">\r\n\r\n          {isLoaded ?\r\n            <Table responsive striped bordered hover variant='success'>\r\n              <thead>\r\n                <tr>\r\n                  <th className=\"text-center\">SN</th>\r\n                  <th className=\"text-center\">ID</th>\r\n                  <th className=\"text-center\">Name</th>\r\n                  <th className=\"text-center\">Email</th>\r\n                  <th className=\"text-center\">Role</th>\r\n                  <th className=\"text-center\">Action</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {\r\n                  users.length > 0 &&\r\n                  users.map((item, index) => (\r\n                    <tr key={index}>\r\n                      <td className=\"text-center\">{index + 1}</td>\r\n                      <td className=\"text-center\">{item._id}</td>\r\n                      <td className=\"text-center\">{item.name}</td>\r\n                      <td className=\"text-center\">{item.email}</td>\r\n                      <td className=\"text-center\">{item.roles.includes(\"super_admin\") ? \"Super Admin\" : item.roles.includes(\"admin\") ? \"Admin\" : \"User\"}</td>\r\n                      <td className=\"text-center\">\r\n                        <Button variant=\"success me-md-2 mb-md-0 mb-1\" onClick={() => { setModalStatus(!modalStatus); getEdituser(index) }}>Edit</Button>\r\n                        <Button variant=\"danger\" onClick={()=>{deleteUser(item._id)}}>Delete</Button>\r\n                      </td>\r\n                    </tr>\r\n                  ))\r\n                }\r\n              </tbody>\r\n            </Table>\r\n            :\r\n            <div className=\"d-flex flex-column pt-5 justify-content-center align-items-center\">\r\n              <Spinner animation=\"border\" variant=\"primary\" />\r\n              <p className=\"fw-bold fs-5\">Please wait...</p>\r\n            </div>\r\n          }\r\n\r\n\r\n          {/* Modal */}\r\n\r\n          {\r\n            <Modal show={modalStatus} onHide={() => { setModalStatus(false) }}\r\n              size=\"lg\" aria-labelledby=\"contained-modal-title-vcenter\" centered>\r\n              <Modal.Header closeButton>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\" className=\"fs-md-5\">\r\n                  Update user details\r\n                </Modal.Title>\r\n              </Modal.Header>\r\n              <Modal.Body>\r\n                <Form className=\"border  p-4  rounded\" >\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-5 col-12\">\r\n                      <Form.Group className=\"mb-3\" controlId=\"formBasicText\">\r\n                        <Form.Label>Full Name</Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"Enter full name\" value={name} onChange={(event) => { setName(event.target.value) }} />\r\n                      </Form.Group>\r\n                    </div>\r\n                    <div className=\"col-md-7 col-12\">\r\n                      <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                        <Form.Label>Email address</Form.Label>\r\n                        <Form.Control type=\"email\" placeholder=\"Enter email\" value={email} onChange={(event) => { setEmail(event.target.value) }} />\r\n                        <Form.Text className=\"text-muted\">\r\n                          We'll never share your email with anyone else.\r\n                        </Form.Text>\r\n                      </Form.Group>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"row m-0 p-0\">\r\n                    <div className=\"col-md-4 col-12 m-0 p-0 me-md-1\">\r\n                      <Form.Group className=\"mb-3\" controlId=\"\">\r\n                        <Form.Label>Course</Form.Label>\r\n                        <Select\r\n                          value={options.value}\r\n                          options={options}\r\n                          defaultValue={{ value: course, label: course }}\r\n                          onChange={(option) => { setCourse(option.value) }}\r\n                        />\r\n                      </Form.Group>\r\n                    </div>\r\n                    <div className=\"col-md-7 col-12 m-0 p-0\">\r\n                      <div className=\"row p-0 m-0\">\r\n                        <div className=\"col-6 p-0\">\r\n                          <Form.Label>State</Form.Label>\r\n                          <Select\r\n                            value={stateOptions.value}\r\n                            options={stateOptions}\r\n                            defaultValue={{ value: state, label: state }}\r\n                            onChange={(option) => { setState(option.value) }}\r\n                          />\r\n                        </div>\r\n                        <div className=\"col-6 ps-1\">\r\n                          <Form.Label>City</Form.Label>\r\n                          <Select\r\n                            value={CityList.value}\r\n                            options={CityList}\r\n                            defaultValue={{ value: city, label: city }}\r\n                            onChange={(option) => { setCity(option.value) }}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-6 md-12 m-0 p-0 ps-3\">\r\n                      <Form.Label>Role</Form.Label>\r\n                      <Select\r\n                        value={RolesList.value}\r\n                        options={RolesList}\r\n                        defaultValue={{ value:roles.includes(\"super_admin\") ? \"Super Admin\" :roles.includes(\"admin\") ? \"Admin\" : \"User\", label: roles.includes(\"super_admin\") ? \"Super Admin\" :roles.includes(\"admin\") ? \"Admin\" : \"User\" }}\r\n                        onChange={(option) => { setRoles([option.value]) }}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </Form>\r\n              </Modal.Body>\r\n              <Modal.Footer>\r\n                <Button variant=\"danger\" onClick={() => { setModalStatus(false) }}>Close</Button>\r\n                <Button onClick={() => { updateHandler() }} >Update</Button>\r\n              </Modal.Footer>\r\n            </Modal>\r\n          }\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Users"],"names":["_ref","openState","setOpenState","menuList","logo","_jsx","FaWindows","name","path","FaUserFriends","FaClipboardList","FaWhmcs","_useState","useState","window","innerWidth","_useState2","_slicedToArray","CurrentWidth","setCurrentWidth","addEventListener","_jsxs","className","style","width","zIndex","marginLeft","transition","children","FaEllo","display","Button","onClick","FaAlignJustify","map","item","index","Link","to","users","setUsers","_useState3","_useState4","modalStatus","setModalStatus","_useState5","_useState6","isLoaded","setIsLoaded","getUsers","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_context","prev","next","axios","concat","BaseUrl","sent","_toConsumableArray","data","usersList","t0","stop","apply","arguments","_useState7","_useState8","StateList","setStateList","_useState9","_useState10","CityList","setCityList","options","value","label","stateOptions","RolesList","_useState11","_useState12","id","setId","_useState13","_useState14","setName","_useState15","_useState16","email","setEmail","_useState17","_useState18","course","setCourse","_useState19","_useState20","state","setState","_useState21","_useState22","city","setCity","_useState23","_useState24","roles","setRoles","updateHandler","_ref2","_callee2","_context2","status","alert","message","console","log","deleteUser","_ref3","_callee3","userId","_context3","_x","useEffect","State","_useState25","_useState26","Sidebar","backgroundColor","Table","responsive","striped","bordered","hover","variant","length","_id","includes","isoCode","find","City","getEdituser","Spinner","animation","Modal","show","onHide","size","centered","closeButton","Form","controlId","type","placeholder","onChange","event","target","Select","defaultValue","option"],"sourceRoot":""}